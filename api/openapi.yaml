openapi: 3.0.3
info:
  title: LvivMall API
  description: |-
    Repository links:
    - [Front-end](https://github.com/ItSeals/-find-mall-frontend)
    - [Back-end](https://github.com/ItSeals/find-mall-backend)
  version: 0.3.0
servers:
  - url: http://localhost:80/api/v1
tags:
  - name: admin
    description: Operations about admin
  - name: mall
    description: Everything about malls
  - name: shop
    description: Everithing about shop
  - name: category
    description: Category CRUD operations
paths:
  /admin/login:
    get:
      tags:
        - admin
      summary: Logs admin into the system
      description: ''
      operationId: loginAdmin
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid admin email/password supplied
  /admin/logout:
    get:
      tags:
        - admin
      summary: Logs out current logged in admin session
      description: ''
      operationId: logoutAdmin
      parameters: []
      responses:
        default:
          description: Successful operation
  /mall:
    get:
      tags:
        - mall
      summary: Get list of all malls
      operationId: getMall
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mall'
    post:
      tags:
        - mall
      summary: Add a new mall to the system
      description: Add a new mall to the system
      operationId: addMall
      requestBody:
        description: Create a new mall in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mall'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mall'
        '405':
          description: Invalid input
      security:
        - api_key: []
    put:
      tags:
        - mall
      summary: Update an existing mall
      description: Update an existing mall by Id
      operationId: updateMall
      requestBody:
        description: Update an existent mall in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mall'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mall'
        '400':
          description: Invalid ID supplied
        '404':
          description: Mall not found
        '405':
          description: Validation exception
      security:
        - api_key: []
  /mall/{mallId}:
    get:
      tags:
        - mall
      summary: Find mall by ID
      description: Returns a single mall
      operationId: getMallById
      parameters:
        - name: mallId
          in: path
          description: ID of mall to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mall'
        '400':
          description: Invalid ID supplied
        '404':
          description: Mall not found
    delete:
      tags:
        - mall
      summary: Deletes a mall
      description: delete a mall
      operationId: deleteMall
      parameters:
        - name: mallId
          in: path
          description: Mall id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid mall value
      security:
        - api_key: []
  /shop:
    get:
      tags:
        - shop
      summary: Get list of all shops
      operationId: getShops
      parameters:
        - name: title
          in: query
          description: letters to search in shop titles
          required: false
          schema:
            type: string
        - name: description
          in: query
          description: letters to search in shop descriptions
          required: false
          schema:
            type: string
        - name: any
          in: query
          description: letters to search in shop titles and descriptions
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'

    post:
      tags:
        - shop
      summary: Add a new shop to the system
      description: Add a new shop to the system
      operationId: addShop
      requestBody:
        description: Create a new Shop in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '405':
          description: Invalid input
      security:
        - api_key: []

    put:
      tags:
        - shop
      summary: Update an existing shop
      description: Update an existing Shop Id
      operationId: updateShop
      requestBody:
        description: Update an existent shop in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '400':
          description: Invalid ID supplied
        '404':
          description: Shop not found
        '405':
          description: Validation exception
      security:
        - api_key: []
  /shop/{shopId}:
    get:
      tags:
        - shop
      summary: Find shop by ID
      description: Returns a single shop
      operationId: getShopById
      parameters:
        - name: shopId
          in: path
          description: ID of shop to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '400':
          description: Invalid ID supplied
        '404':
          description: Shop not found
    delete:
      tags:
        - shop
      summary: Deletes a shop
      description: delete a shop
      operationId: deleteShop
      parameters:
        - name: shopId
          in: path
          description: Shop id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid shop value
      security:
        - api_key: []
  /category:
    get:
      tags:
        - category
      summary: Get all categories
      operationId: getCategory
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - category
      summary: Add a new category to the system
      description: Add a new category to the system
      operationId: addCategory
      requestBody:
        description: Create a new category in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '405':
          description: Invalid input
      security:
        - api_key: []
    put:
      tags:
        - category
      summary: Update an existing category
      description: Update an existing category by Id
      operationId: updateCategory
      requestBody:
        description: Update an existent category in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
        '405':
          description: Validation exception
      security:
        - api_key: []
  /category/{categoryId}:
    get:
      tags:
        - category
      summary: Find category by ID
      description: Returns a single shop
      operationId: getCategoryById
      parameters:
        - name: categoryId
          in: path
          description: ID of shop to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
    delete:
      tags:
        - category
      summary: Deletes a Category
      description: delete a Category
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          description: Category id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid Category value
      security:
        - api_key: []
components:
  schemas:
    Mall:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: uint32
          example: 10
        title:
          type: string
          example: Lviv Mall
        description:
          type: string
          example: The best mall ever
        # photoUrls:
        #   type: array
        #   items:
        #     type: string
        status:
          type: integer
          description: mall status in the system
          enum:
            - 1
            - 0
    Shop:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: uint32
          example: 20
        title:
          type: string
          example: Lucik_shop
        description:
          type: string
          example: The best shop ever
        # photoUrls:
        #   type: array
        #   items:
        #     type: string
        status:
          type: integer
          description: shop status in the system
          enum:
            - 1
            - 0
    Category:
      required:
        - title
      type: object
      properties:
        id:
          type: integer
          format: uint32
          example: 67
        title:
          type: string
          example: products
        description:
          type: string
          example: food and drinks
        status:
          type: integer
          description: category status in the system
          enum:
            - 1
            - 0
  requestBodies:
    Mall:
      description: Mall object that needs to be added to the system
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Mall'
    Shop:
      description: Shop object that needs to be added to the system
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Shop'
    Category:
      description: Category object that needs to be added to the system
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header